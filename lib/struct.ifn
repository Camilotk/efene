@@moddoc("modulo to manipulate struct data structures")

@public
@doc("access the value of an attribute in a struct")
get = fn ((struct, Body), Name)
    switch lists.keyfind(Name, 1, Body)
        case false
            StrName = atom_to_list(Name)
            switch lists.keyfind(StrName, 1, Body)
                case false
                    throw(attribute_error =>
                        "struct has no attribute '" ++ atom_to_list(Name) ++ "'")
                case _ => Value
                    Value
        case Name => Value
            Value

fn (_, _Name)
    throw(value_error => "value doesn't seem to be a struct")

@public
@doc("access the value of an attribute in a struct, used internally to display better errors")
get = fn ((struct, Body), Name, AttrName)
    switch lists.keyfind(Name, 1, Body)
        case false
            StrName = atom_to_list(Name)
            switch lists.keyfind(StrName, 1, Body)
                case false
                    throw(attribute_error =>
                        atom_to_list(AttrName) ++ " struct has no attribute '" ++ atom_to_list(Name) ++ "'")
                case _ => Value
                    Value
        case Name => Value
            Value

fn (_, _Name, AttrName)
    throw(value_error => atom_to_list(AttrName) ++ " doesn't seem to be a struct")

@public
@doc("replace the value of an attribute in a struct, used internally to display better errors")
set = fn ((struct, Body), Name, AttrName, Value)
    switch lists.keyfind(Name, 1, Body)
        case false
            StrName = atom_to_list(Name)
            switch lists.keyfind(StrName, 1, Body)
                case false
                    throw(attribute_error =>
                        atom_to_list(AttrName) ++ " struct has no attribute '" ++ atom_to_list(Name) ++ "'")
                case _
                    (struct, lists.keyreplace(StrName, 1, Body, StrName => Value))
        case _
            (struct, lists.keyreplace(Name, 1, Body, Name => Value))

fn (_, _Name, AttrName, _Value)
    throw(value_error => atom_to_list(AttrName) ++ " doesn't seem to be a struct")
